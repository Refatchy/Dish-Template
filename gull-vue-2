<template>
    <div>
      <div id="topnav">
        {{isActive}}
         <!-- @click="isActive = !isActive" inside toggle-btn  -->
        <div class="toggle-btn" @click="myToggle" >
            <div class="nav-icon"></div>
            <div class="nav-icon"></div>
            <div class="nav-icon"></div>
        </div>  
        
          <!-- :class="{ 'sidebar-closed': isActive }"  inside #sibar-div -->
            <div id="sidebar" 
            class="sidebar-full" 
            :class="{'open' : isSideNavOpen,'sidebar-closed': isSideNavClose } ">
          
              <ul>
                <li @mouseover="secondary"  data-item="home">Home</li>
                <li @mouseover="secondary" data-item="contact">Contact</li>
                <li @mouseover="secondary" data-item="about">about us</li>
              </ul>
            </div>
            <div class="sidebar-secondary" :class="{'open' : isSecondarysideNavOpen} ">
                <ul class="child-nav" 
                data-parent="home" 
                
                :style="{'display' :isStyleBlock}"
                >
                    <li>Sub Home </li>
                    <li>Sub Home</li>
                    <li>Sub Home</li>
                </ul>

                <ul class="child-nav" data-parent="contact" style="display:none"
                >
                  <li>Sub Contact</li>
                  <li>Sub Contact</li>
                  <li>Sub Contact</li>
                  <li>Sub Contact</li>
                </ul>
                <ul class="child-nav" data-parent="about" style="display:none">
                  <li>Sub About</li>
                  <li>Sub About</li>
                  <li>Sub About</li>
                  <li>Sub About</li>
                </ul>
            </div>
          
      </div>
       
    </div>
</template>

<script>
export default {
  
  data(){
    return{
      isActive:false,
      isDisplay:true,
      isSideNavOpen:true,
      isSecondarysideNavOpen:false,
      isSideNavClose:false,
      isStyleBlock:'block'
    }
  },
  methods:{
    
    myToggle(){
        // if(this.isSideNavOpen){
        //    this.isSideNavOpen = !this.isSideNavOpen
          
        // }else if(!this.isSideNavOpen && !this.isSecondarysideNavOpe){
        //     this.isSideNavOpen = !this.isSideNavOpen
        //     this.isSecondarysideNavOpen = !this.isSecondarysideNavOpen  
        // }else if(this.isSideNavOpen && !this.isSideNavOpen && this.isSecondarysideNavOpen)
        // {
        //   console.log('asdasd');
        // }

        if(this.isSideNavOpen && !this.isSideNavClose){

          this.isSideNavClose = !this.isSideNavClose
          this.isSideNavOpen = !this.isSideNavOpen

        }else if(!this.isSideNavOpen && this.isSideNavClose){

          this.isSideNavOpen = !this.isSideNavOpen
          this.isSideNavClose = !this.isSideNavClose

          this.isSecondarysideNavOpen = !this.isSecondarysideNavOpen 

        }else if(this.isSideNavOpen && !this.isSideNavClose && !this.isSecondarysideNavOpen){
          
          console.log('print');

        }
        
    },
   
    // toggle(){
    //   if(this.isSideNavOpen && this.isSecondarysideNavOpen)
    //   {
    //   console.log('one');
    //   // this.isSideNavOpen = !this.isSideNavOpen;
    //   this.isSecondarysideNavOpen=!this.isSecondarysideNavOpen;
    //   }
    //   else if( this.isSecondarysideNavOpen){
    //     this.isSecondarysideNavOpen=!this.isSecondarysideNavOpen;
    //     console.log('two');
    //   } 
    //   else if(this.isSideNavOpen)
    //   {
    //     this.isSideNavOpen=!this.isSideNavOpen;
    //     console.log('three');
    //   }
    //   else if(!this.isSideNavOpen && !this.isSecondarysideNavOpen){
    //     this.isSideNavOpen=true;
    //     this.isSecondarysideNavOpen=true;
    //     console.log('four');

    //   }else if (!this.isSideNavOpen){
    //   this.isSideNavOpen=true;
    //   console.log('five');
    //   } else if(!this.isSecondarysideNavOpen){
    //     this.isSecondarysideNavOpen=true;
    //     console.log('six');
    //   }
    // },
    
    secondary(ref){
      let eventType = ref.target;
      // console.log(eventType);
      var data_item = eventType.getAttribute('data-item');
      // console.log(data_item);

      //  end::data-item-------------

      var eventTwo = document.querySelectorAll('.sidebar-secondary ul');
      // console.log(eventTwo);
      for (const iterator of eventTwo) {
       
        let dataParent = iterator.dataset.parent;
        if(dataParent === data_item){
          // console.log(dataParent); 
          iterator.style.display ="block";
          let addSidebarSecondary = document.querySelector('.sidebar-secondary');
            addSidebarSecondary.classList.add('open');

        
           
          // console.log(iterator);
          
        }
        else {
          iterator.style.display = "none";
          
        }
      }
    
      
      
    },
    isToggle(){
        
        // let addSidebarOpen = document.querySelectorAll('.sidebar-secondary.open');
        // // sidebarOpen::start
        // for (const open of addSidebarOpen) {
        //   // console.log(open,'second');
        //   if(open){
        //     open.classList.remove('open');
        //     return;
            
        //   }else{
        //     console.log('not working');
        //   }
        // }
        // // sidebarOpen::end

        //   // it turns full compact

        // let addSidebar = document.querySelector('.sidebar-secondary');
        // if(addSidebar){
        //   let sidebarFull = document.querySelector('.sidebar-full');
        //   sidebarFull.classList.add('sidebar-closed');
        //   return;
        // }else{
        //   console.log('not working');
          
        // }
       

        // let sidebarCompact = document.querySelectorAll('.sidebar-full.sidebar-closed');
        // console.log('hello');
        
        
        // let addSidebar = document.querySelector('.sidebar-secondary');
        // let m = document.querySelector('.sidebar-compact');
        
        // if(addSidebar && !m)
        // {
        //   let compact = document.querySelector(".sidebar-full");
        //   compact.classList.add('sidebar-compact');
        //   return;
        // }else{
        //   let compact = document.querySelector(".sidebar-compact");
        //   compact.classList.remove('sidebar-full');
        // } 
        
        
        // if(m)
        // {
        //   m.classList.remove('sidebar-compact');
          
        //  console.log(m); 
         
        // }else{
          
        // } 
        
        
        
      
    }
  }
}
</script>

<style scoped>
  *{
    margin: 0px;
    padding:0px;
  }
  .sidebar-display {
    display: none;
  }
  .display{
    display: block;
  }
  #sidebar{
    
    height: 100%;
    background-color: tomato;
    transition: all 0.5s ease-in;
  }
  .open{
    left: 0px;
    transition: all 0.5s ease-in;
  }
  .sidebar-secondary.open{
    left: 200px;
  }
  .sidebar-compact{
    left:-200px;
    transition: all .24s ease-in-out;
  }
  .sidebar-secondary{
    z-index: -2;
    position: fixed;
    top: 100px;
    left:-100px; 
    height: 100%;
    background-color: blueviolet;
    transition: all .24s ease-in-out;
  }
  #sidebar ul li:hover .sidebar-secondary{
    background-color: aqua;
  }
 
  .sidebar-secondary ul li{
    list-style: none;
    
  }
  .sidebar-full{
    width: 200px;
    transition: all .24s ease-in-out;
    top:100px;
    position: fixed;
    
  }
  .sidebar-full ul li{
    cursor: pointer;
    color: aliceblue;
    padding-left: 50px;
    margin: 20px 0;
  }
  .nested-nav{
    background-color: aqua;
    position: fixed;
    top: 100px;
    left: 200px;
    
    bottom: 0;
  }
  
  
  #topnav{
    float: right;
   
    width: 100%;
    height: 100px;
    background-color: rgb(4, 146, 58);
  }
  #topnav .toggle-btn .nav-icon{
    cursor: pointer;
    width: 35px;
    height: 5px;
    background-color: black;
    margin: 6px 0;
  }
  .sidebar-closed{
    left: -200px;
    transition: all .24s ease-in-out;
  }

</style>
